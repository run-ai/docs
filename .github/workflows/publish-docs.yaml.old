name: publish docs CI 

on:
  workflow_dispatch:
    inputs:
      version:
        required: false
        description: 'Version number from branch / "main" for latest'
        default: "main"
        type: string
      alias:
        required: false
        description: 'Version alias / "latest" for latest'
        default: "latest"
        type: string
      title:
        required: false
        description: 'Doc site dropdown menu title (version +/- latest)'
        default: "latest"
        type: string

  # pull_request:
  #   branches:
  #     - "master"

jobs:
  install_dependencies_and_deploy:
    name: install dependencies and deploy latest changes to prod
    runs-on: ubuntu-latest
    steps:
        - name: checkout latest
          uses: actions/checkout@v3
          with:
            ref: ${{ inputs.version }}
            fetch-depth: 0

        - name: setup python
          uses: actions/setup-python@v4
          with:
            python-version: '3.9'
            cache: 'pip' # caching pip dependencies

        - name: install dependencies
          run: |
           pip3 install -r requirements.txt
      


        - name: Configure Git User
          run: |
            git config user.name "jasonnovichrunai"
            git config user.email "jason.novich@run.ai"
#            git fetch origin gh-pages
        
#         - name: deploy mkdocs latest
# #          run: mkdocs gh-deploy --force
# #          echo "deploy new version with mike..."
#           if: ${{ inputs.version == 'master'}}
#           run: | 
#             mike deploy --push ${{ inputs.version }} ${{ inputs.alias }} --title=${{ inputs.title }}-latest
#             mike set-default ${{ inputs.alias }} --ignore
#         - name: deploy mkdocs version
#           if: ${{ inputs.version != 'master' }}
#           run: |
#             mike deploy --push ${{ inputs.version }} ${{ inputs.alias }} --title=${{ inputs.title }}-latest
#            mike set-default ${{ inputs.alias }} --ignore
#   if [[ "${{ inputs.delete_latest }}" == 'true' ]]; then
#                mike delete --push latest
#              fi
# --title=${{ inputs.alias }}${latest}
#          run: mike delete --push 2.9a
           
             
        - name: deploy mkdocs
          run: | 
            mike list
            echo "deploy new version with mike..."
            latest=""
            if [[ "${{ inputs.version }}" == 'main' ]]; then
              version=latest
              latest="-latest"
            else
              version=${{ inputs.version }}
            fi
            echo "${version}"
            mike deploy --push ${{ inputs.version }} ${{ inputs.alias }} --title=${{ inputs.title }}
            if [[ "${{ inputs.version }}" == 'main' ]]; then
              echo "setting this version as a latest..."
              mike set-default ${{ inputs.alias }} --ignore
            fi

